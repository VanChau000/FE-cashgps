export default interface IUSerCtx {
  user: null;
  idTransaction: null;
  activeToast: null;
  contentToast: null;
  cashPerDayIn: any;
  cashPerDayOut: any;
  gainAndLoss: null;
  cashPosition: null;
  weekSchedule: null;
  listCashGroup: any;
  idCash: { name: string };
  listNameCategory: any;
  cashGroup: { cashId: string; cashName: string; groupType: string };
  toggleEditGroup: { group: boolean; general: boolean };
  category: { id: string; name: string; displayMode: string, cashGroupId: string };
  nameCashGroup: { id: string; name: string; groupType: any };
  toast: { activeToast: null,setActiveToast:null, bgToast: null, contentToast: null };
  inforProject: {
    projectName: string;
    startingBalance: number;
    startDate: string;
    timezone: string;
    currency: string;
  };
  profile:any;
  isExistedProject: any;
  login: (user: any) => Promise<any>;
  logout: () => Promise<void>;
  setProfile: (profile: any) => Promise<void>;
  setIdTransaction: (idTransaction: any) => Promise<void>;
  setActiveToast: (activeToast: any) => Promise<void>;
  setContentToast: (contentToast: any) => Promise<void>;
  setCategory: (category: any) => Promise<void>;
  setNameCashGroup: (nameCashGroup: any) => Promise<void>;
  setCashPerDayIn: (cashPerDayIn: any) => Promise<void>;
  setCashPerDayOut: (cashPerDayOut: any) => Promise<void>;
  setGainAndLoss: (gainAndLoss: any) => Promise<void>;
  setCashPosition: (cashPosition: any) => Promise<void>;
  setInforProject: (inforProject: any) => Promise<void>;
  setWeekSchedule: (weekSchedule: any) => Promise<void>;
  setListCashGroup: (listCashGroup: any) => Promise<void>;
  setCashGroup: (cashGroup: any) => Promise<void>;
  setIdCash: (idCash: any) => Promise<void>;
  setListNameCategory: (listNameCategory: any) => Promise<void>;
  setToggleEditGroup: (toggleEditGroup: any) => Promise<void>;
  setIsExistedProject: (isExistedProject: any) => Promise<void>;
  setToast: (toast: any) => Promise<void>;
}
